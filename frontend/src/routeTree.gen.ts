/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'

// Create Virtual Routes

const AuthLazyImport = createFileRoute('/auth')()
const AuthenticatedIndexLazyImport = createFileRoute('/_authenticated/')()
const AuthenticatedSettingsLazyImport = createFileRoute(
  '/_authenticated/settings',
)()
const AuthenticatedAboutLazyImport = createFileRoute('/_authenticated/about')()

// Create/Update Routes

const AuthLazyRoute = AuthLazyImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth.lazy').then((d) => d.Route))

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexLazyRoute = AuthenticatedIndexLazyImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/index.lazy').then((d) => d.Route),
)

const AuthenticatedSettingsLazyRoute = AuthenticatedSettingsLazyImport.update({
  path: '/settings',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/settings.lazy').then((d) => d.Route),
)

const AuthenticatedAboutLazyRoute = AuthenticatedAboutLazyImport.update({
  path: '/about',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/about.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/about': {
      id: '/_authenticated/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AuthenticatedAboutLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedAboutLazyRoute: typeof AuthenticatedAboutLazyRoute
  AuthenticatedSettingsLazyRoute: typeof AuthenticatedSettingsLazyRoute
  AuthenticatedIndexLazyRoute: typeof AuthenticatedIndexLazyRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAboutLazyRoute: AuthenticatedAboutLazyRoute,
  AuthenticatedSettingsLazyRoute: AuthenticatedSettingsLazyRoute,
  AuthenticatedIndexLazyRoute: AuthenticatedIndexLazyRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteWithChildren
  '/auth': typeof AuthLazyRoute
  '/about': typeof AuthenticatedAboutLazyRoute
  '/settings': typeof AuthenticatedSettingsLazyRoute
  '/': typeof AuthenticatedIndexLazyRoute
}

export interface FileRoutesByTo {
  '/auth': typeof AuthLazyRoute
  '/about': typeof AuthenticatedAboutLazyRoute
  '/settings': typeof AuthenticatedSettingsLazyRoute
  '/': typeof AuthenticatedIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/auth': typeof AuthLazyRoute
  '/_authenticated/about': typeof AuthenticatedAboutLazyRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsLazyRoute
  '/_authenticated/': typeof AuthenticatedIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/auth' | '/about' | '/settings' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth' | '/about' | '/settings' | '/'
  id:
    | '__root__'
    | '/_authenticated'
    | '/auth'
    | '/_authenticated/about'
    | '/_authenticated/settings'
    | '/_authenticated/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthLazyRoute: typeof AuthLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthLazyRoute: AuthLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/auth"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/about",
        "/_authenticated/settings",
        "/_authenticated/"
      ]
    },
    "/auth": {
      "filePath": "auth.lazy.tsx"
    },
    "/_authenticated/about": {
      "filePath": "_authenticated/about.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.lazy.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
